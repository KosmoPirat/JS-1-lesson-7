"use strict";

// A
/*if (!("a" in window)) {
    var a = 1;
}
alert(a);*/

// Т. к в объекте "window" нет св-ва (метода) "а" !false равно true далее  а = 1 и выведется соответственно 1.

// B
/*var b = function a(x) {
 x && a(--x);
};
alert(a);*/

// Т. к function a(x) объявлена как function expression для переменной b и является тепереь св-вом (методом) этой
// переменной. Выполнение alert(a); выведет undefined потому что у объкта "window" нет св-ва (метода) "а".


// С
/*function a(x) {
 return x * 2;
}
var a;
alert(a);*/

// 1) К объекту window добавляется функция "а" как метод 2) происходит добавление переменной "а" к объкту window, но
// т.к. он уже объявлен и в переменную "а" ничего не передается, ничего и не происходит. 3) Вывод "а" выведет тело функции.

// D
/*function b(x, y, a) {
    arguments[2] = 10;
    alert(a);
}
b(1, 2, 3);*/

//Переменная а при выводе будет равна 3. Для того что бы псевдо-массив "arguments" переопределил значение параметра
// передаваемого в функцию необходимо отключить "строгий режим"

//
/*function a() {
 alert(this);
}
a.call(null);*/

//В данном примере "this" равна null т.к. мы использовали явную передачу контекста в "строгом режиме" this = null.
// Если бы не использовали "строгий режим" то в таком случае this = window и alert(this) вывело бы window